// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Protobuf.Components {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class LocationMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Protobuf_Components_Location__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protobuf.Components.Location, global::Protobuf.Components.Location.Builder> internal__static_Protobuf_Components_Location__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protobuf_Components_BaseStation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protobuf.Components.BaseStation, global::Protobuf.Components.BaseStation.Builder> internal__static_Protobuf_Components_BaseStation__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static LocationMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cgpsb2NhLnByb3RvEhNQcm90b2J1Zi5Db21wb25lbnRzGiRnb29nbGUvcHJv" + 
          "dG9idWYvY3NoYXJwX29wdGlvbnMucHJvdG8i2QIKCExvY2F0aW9uEg4KBnVz" + 
          "ZXJJRBgBIAIoCRINCgVhcHBJRBgCIAIoCRIMCgR0eXBlGAMgAigFEjgKCG9w" + 
          "ZXJhdG9yGAQgAigOMiYuUHJvdG9idWYuQ29tcG9uZW50cy5Mb2NhdGlvbi5P" + 
          "cGVyYXRvchIUCgxjb29yZGluYXRpb24YBSABKAkSCwoDbGF0GAYgASgJEgsK" + 
          "A2xuZxgHIAEoCRIPCgdhZGRyZXNzGAggASgJEhMKC2xvY2F0ZV90aW1lGAkg" + 
          "ASgJEhIKCmVycm9yX2NvZGUYCiABKAUSGAoQY29kZV9kZXNjcmlwdGlvbhgL" + 
          "IAEoCRIxCgdzdGF0aW9uGAwgAygLMiAuUHJvdG9idWYuQ29tcG9uZW50cy5C" + 
          "YXNlU3RhdGlvbiIvCghPcGVyYXRvchIKCgZNb2JpbGUQABILCgd0ZWxlY29t" + 
          "EAESCgoGdW5pY29tEAIiWQoLQmFzZVN0YXRpb24SCwoDbGFjGAEgAigJEgsK" + 
          "A2NpZBgCIAIoCRILCgNtY2MYAyABKAkSCwoDbW5jGAQgASgJEhYKDnNpZ25h" + 
          "bFN0cmVuZ3RoGAUgASgFQiXCPiIKE1Byb3RvYnVmLkNvbXBvbmVudHMSC0xv" + 
          "Y2F0aW9uTXNn");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Protobuf_Components_Location__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Protobuf_Components_Location__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protobuf.Components.Location, global::Protobuf.Components.Location.Builder>(internal__static_Protobuf_Components_Location__Descriptor,
                new string[] { "UserID", "AppID", "Type", "Operator", "Coordination", "Lat", "Lng", "Address", "LocateTime", "ErrorCode", "CodeDescription", "Station", });
        internal__static_Protobuf_Components_BaseStation__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Protobuf_Components_BaseStation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protobuf.Components.BaseStation, global::Protobuf.Components.BaseStation.Builder>(internal__static_Protobuf_Components_BaseStation__Descriptor,
                new string[] { "Lac", "Cid", "Mcc", "Mnc", "SignalStrength", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Location : pb::GeneratedMessage<Location, Location.Builder> {
    private Location() { }
    private static readonly Location defaultInstance = new Location().MakeReadOnly();
    private static readonly string[] _locationFieldNames = new string[] { "address", "appID", "code_description", "coordination", "error_code", "lat", "lng", "locate_time", "operator", "station", "type", "userID" };
    private static readonly uint[] _locationFieldTags = new uint[] { 66, 18, 90, 42, 80, 50, 58, 74, 32, 98, 24, 10 };
    public static Location DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Location DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Location ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protobuf.Components.LocationMsg.internal__static_Protobuf_Components_Location__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Location, Location.Builder> InternalFieldAccessors {
      get { return global::Protobuf.Components.LocationMsg.internal__static_Protobuf_Components_Location__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Operator {
        Mobile = 0,
        telecom = 1,
        unicom = 2,
      }
      
    }
    #endregion
    
    public const int UserIDFieldNumber = 1;
    private bool hasUserID;
    private string userID_ = "";
    public bool HasUserID {
      get { return hasUserID; }
    }
    public string UserID {
      get { return userID_; }
    }
    
    public const int AppIDFieldNumber = 2;
    private bool hasAppID;
    private string appID_ = "";
    public bool HasAppID {
      get { return hasAppID; }
    }
    public string AppID {
      get { return appID_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int OperatorFieldNumber = 4;
    private bool hasOperator;
    private global::Protobuf.Components.Location.Types.Operator operator_ = global::Protobuf.Components.Location.Types.Operator.Mobile;
    public bool HasOperator {
      get { return hasOperator; }
    }
    public global::Protobuf.Components.Location.Types.Operator Operator {
      get { return operator_; }
    }
    
    public const int CoordinationFieldNumber = 5;
    private bool hasCoordination;
    private string coordination_ = "";
    public bool HasCoordination {
      get { return hasCoordination; }
    }
    public string Coordination {
      get { return coordination_; }
    }
    
    public const int LatFieldNumber = 6;
    private bool hasLat;
    private string lat_ = "";
    public bool HasLat {
      get { return hasLat; }
    }
    public string Lat {
      get { return lat_; }
    }
    
    public const int LngFieldNumber = 7;
    private bool hasLng;
    private string lng_ = "";
    public bool HasLng {
      get { return hasLng; }
    }
    public string Lng {
      get { return lng_; }
    }
    
    public const int AddressFieldNumber = 8;
    private bool hasAddress;
    private string address_ = "";
    public bool HasAddress {
      get { return hasAddress; }
    }
    public string Address {
      get { return address_; }
    }
    
    public const int LocateTimeFieldNumber = 9;
    private bool hasLocateTime;
    private string locateTime_ = "";
    public bool HasLocateTime {
      get { return hasLocateTime; }
    }
    public string LocateTime {
      get { return locateTime_; }
    }
    
    public const int ErrorCodeFieldNumber = 10;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int CodeDescriptionFieldNumber = 11;
    private bool hasCodeDescription;
    private string codeDescription_ = "";
    public bool HasCodeDescription {
      get { return hasCodeDescription; }
    }
    public string CodeDescription {
      get { return codeDescription_; }
    }
    
    public const int StationFieldNumber = 12;
    private pbc::PopsicleList<global::Protobuf.Components.BaseStation> station_ = new pbc::PopsicleList<global::Protobuf.Components.BaseStation>();
    public scg::IList<global::Protobuf.Components.BaseStation> StationList {
      get { return station_; }
    }
    public int StationCount {
      get { return station_.Count; }
    }
    public global::Protobuf.Components.BaseStation GetStation(int index) {
      return station_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserID) return false;
        if (!hasAppID) return false;
        if (!hasType) return false;
        if (!hasOperator) return false;
        foreach (global::Protobuf.Components.BaseStation element in StationList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _locationFieldNames;
      if (hasUserID) {
        output.WriteString(1, field_names[11], UserID);
      }
      if (hasAppID) {
        output.WriteString(2, field_names[1], AppID);
      }
      if (hasType) {
        output.WriteInt32(3, field_names[10], Type);
      }
      if (hasOperator) {
        output.WriteEnum(4, field_names[8], (int) Operator, Operator);
      }
      if (hasCoordination) {
        output.WriteString(5, field_names[3], Coordination);
      }
      if (hasLat) {
        output.WriteString(6, field_names[5], Lat);
      }
      if (hasLng) {
        output.WriteString(7, field_names[6], Lng);
      }
      if (hasAddress) {
        output.WriteString(8, field_names[0], Address);
      }
      if (hasLocateTime) {
        output.WriteString(9, field_names[7], LocateTime);
      }
      if (hasErrorCode) {
        output.WriteInt32(10, field_names[4], ErrorCode);
      }
      if (hasCodeDescription) {
        output.WriteString(11, field_names[2], CodeDescription);
      }
      if (station_.Count > 0) {
        output.WriteMessageArray(12, field_names[9], station_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserID) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserID);
        }
        if (hasAppID) {
          size += pb::CodedOutputStream.ComputeStringSize(2, AppID);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Type);
        }
        if (hasOperator) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Operator);
        }
        if (hasCoordination) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Coordination);
        }
        if (hasLat) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Lat);
        }
        if (hasLng) {
          size += pb::CodedOutputStream.ComputeStringSize(7, Lng);
        }
        if (hasAddress) {
          size += pb::CodedOutputStream.ComputeStringSize(8, Address);
        }
        if (hasLocateTime) {
          size += pb::CodedOutputStream.ComputeStringSize(9, LocateTime);
        }
        if (hasErrorCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, ErrorCode);
        }
        if (hasCodeDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(11, CodeDescription);
        }
        foreach (global::Protobuf.Components.BaseStation element in StationList) {
          size += pb::CodedOutputStream.ComputeMessageSize(12, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Location ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Location ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Location ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Location ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Location ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Location ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Location ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Location ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Location ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Location ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Location MakeReadOnly() {
      station_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Location prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Location, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Location cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Location result;
      
      private Location PrepareBuilder() {
        if (resultIsReadOnly) {
          Location original = result;
          result = new Location();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Location MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protobuf.Components.Location.Descriptor; }
      }
      
      public override Location DefaultInstanceForType {
        get { return global::Protobuf.Components.Location.DefaultInstance; }
      }
      
      public override Location BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Location) {
          return MergeFrom((Location) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Location other) {
        if (other == global::Protobuf.Components.Location.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserID) {
          UserID = other.UserID;
        }
        if (other.HasAppID) {
          AppID = other.AppID;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasOperator) {
          Operator = other.Operator;
        }
        if (other.HasCoordination) {
          Coordination = other.Coordination;
        }
        if (other.HasLat) {
          Lat = other.Lat;
        }
        if (other.HasLng) {
          Lng = other.Lng;
        }
        if (other.HasAddress) {
          Address = other.Address;
        }
        if (other.HasLocateTime) {
          LocateTime = other.LocateTime;
        }
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasCodeDescription) {
          CodeDescription = other.CodeDescription;
        }
        if (other.station_.Count != 0) {
          result.station_.Add(other.station_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_locationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _locationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserID = input.ReadString(ref result.userID_);
              break;
            }
            case 18: {
              result.hasAppID = input.ReadString(ref result.appID_);
              break;
            }
            case 24: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.operator_, out unknown)) {
                result.hasOperator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 42: {
              result.hasCoordination = input.ReadString(ref result.coordination_);
              break;
            }
            case 50: {
              result.hasLat = input.ReadString(ref result.lat_);
              break;
            }
            case 58: {
              result.hasLng = input.ReadString(ref result.lng_);
              break;
            }
            case 66: {
              result.hasAddress = input.ReadString(ref result.address_);
              break;
            }
            case 74: {
              result.hasLocateTime = input.ReadString(ref result.locateTime_);
              break;
            }
            case 80: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 90: {
              result.hasCodeDescription = input.ReadString(ref result.codeDescription_);
              break;
            }
            case 98: {
              input.ReadMessageArray(tag, field_name, result.station_, global::Protobuf.Components.BaseStation.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserID {
        get { return result.hasUserID; }
      }
      public string UserID {
        get { return result.UserID; }
        set { SetUserID(value); }
      }
      public Builder SetUserID(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserID = true;
        result.userID_ = value;
        return this;
      }
      public Builder ClearUserID() {
        PrepareBuilder();
        result.hasUserID = false;
        result.userID_ = "";
        return this;
      }
      
      public bool HasAppID {
        get { return result.hasAppID; }
      }
      public string AppID {
        get { return result.AppID; }
        set { SetAppID(value); }
      }
      public Builder SetAppID(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAppID = true;
        result.appID_ = value;
        return this;
      }
      public Builder ClearAppID() {
        PrepareBuilder();
        result.hasAppID = false;
        result.appID_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasOperator {
       get { return result.hasOperator; }
      }
      public global::Protobuf.Components.Location.Types.Operator Operator {
        get { return result.Operator; }
        set { SetOperator(value); }
      }
      public Builder SetOperator(global::Protobuf.Components.Location.Types.Operator value) {
        PrepareBuilder();
        result.hasOperator = true;
        result.operator_ = value;
        return this;
      }
      public Builder ClearOperator() {
        PrepareBuilder();
        result.hasOperator = false;
        result.operator_ = global::Protobuf.Components.Location.Types.Operator.Mobile;
        return this;
      }
      
      public bool HasCoordination {
        get { return result.hasCoordination; }
      }
      public string Coordination {
        get { return result.Coordination; }
        set { SetCoordination(value); }
      }
      public Builder SetCoordination(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCoordination = true;
        result.coordination_ = value;
        return this;
      }
      public Builder ClearCoordination() {
        PrepareBuilder();
        result.hasCoordination = false;
        result.coordination_ = "";
        return this;
      }
      
      public bool HasLat {
        get { return result.hasLat; }
      }
      public string Lat {
        get { return result.Lat; }
        set { SetLat(value); }
      }
      public Builder SetLat(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLat = true;
        result.lat_ = value;
        return this;
      }
      public Builder ClearLat() {
        PrepareBuilder();
        result.hasLat = false;
        result.lat_ = "";
        return this;
      }
      
      public bool HasLng {
        get { return result.hasLng; }
      }
      public string Lng {
        get { return result.Lng; }
        set { SetLng(value); }
      }
      public Builder SetLng(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLng = true;
        result.lng_ = value;
        return this;
      }
      public Builder ClearLng() {
        PrepareBuilder();
        result.hasLng = false;
        result.lng_ = "";
        return this;
      }
      
      public bool HasAddress {
        get { return result.hasAddress; }
      }
      public string Address {
        get { return result.Address; }
        set { SetAddress(value); }
      }
      public Builder SetAddress(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddress = true;
        result.address_ = value;
        return this;
      }
      public Builder ClearAddress() {
        PrepareBuilder();
        result.hasAddress = false;
        result.address_ = "";
        return this;
      }
      
      public bool HasLocateTime {
        get { return result.hasLocateTime; }
      }
      public string LocateTime {
        get { return result.LocateTime; }
        set { SetLocateTime(value); }
      }
      public Builder SetLocateTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocateTime = true;
        result.locateTime_ = value;
        return this;
      }
      public Builder ClearLocateTime() {
        PrepareBuilder();
        result.hasLocateTime = false;
        result.locateTime_ = "";
        return this;
      }
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasCodeDescription {
        get { return result.hasCodeDescription; }
      }
      public string CodeDescription {
        get { return result.CodeDescription; }
        set { SetCodeDescription(value); }
      }
      public Builder SetCodeDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCodeDescription = true;
        result.codeDescription_ = value;
        return this;
      }
      public Builder ClearCodeDescription() {
        PrepareBuilder();
        result.hasCodeDescription = false;
        result.codeDescription_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::Protobuf.Components.BaseStation> StationList {
        get { return PrepareBuilder().station_; }
      }
      public int StationCount {
        get { return result.StationCount; }
      }
      public global::Protobuf.Components.BaseStation GetStation(int index) {
        return result.GetStation(index);
      }
      public Builder SetStation(int index, global::Protobuf.Components.BaseStation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.station_[index] = value;
        return this;
      }
      public Builder SetStation(int index, global::Protobuf.Components.BaseStation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.station_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStation(global::Protobuf.Components.BaseStation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.station_.Add(value);
        return this;
      }
      public Builder AddStation(global::Protobuf.Components.BaseStation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.station_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStation(scg::IEnumerable<global::Protobuf.Components.BaseStation> values) {
        PrepareBuilder();
        result.station_.Add(values);
        return this;
      }
      public Builder ClearStation() {
        PrepareBuilder();
        result.station_.Clear();
        return this;
      }
    }
    static Location() {
      object.ReferenceEquals(global::Protobuf.Components.LocationMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BaseStation : pb::GeneratedMessage<BaseStation, BaseStation.Builder> {
    private BaseStation() { }
    private static readonly BaseStation defaultInstance = new BaseStation().MakeReadOnly();
    private static readonly string[] _baseStationFieldNames = new string[] { "cid", "lac", "mcc", "mnc", "signalStrength" };
    private static readonly uint[] _baseStationFieldTags = new uint[] { 18, 10, 26, 34, 40 };
    public static BaseStation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BaseStation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BaseStation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protobuf.Components.LocationMsg.internal__static_Protobuf_Components_BaseStation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BaseStation, BaseStation.Builder> InternalFieldAccessors {
      get { return global::Protobuf.Components.LocationMsg.internal__static_Protobuf_Components_BaseStation__FieldAccessorTable; }
    }
    
    public const int LacFieldNumber = 1;
    private bool hasLac;
    private string lac_ = "";
    public bool HasLac {
      get { return hasLac; }
    }
    public string Lac {
      get { return lac_; }
    }
    
    public const int CidFieldNumber = 2;
    private bool hasCid;
    private string cid_ = "";
    public bool HasCid {
      get { return hasCid; }
    }
    public string Cid {
      get { return cid_; }
    }
    
    public const int MccFieldNumber = 3;
    private bool hasMcc;
    private string mcc_ = "";
    public bool HasMcc {
      get { return hasMcc; }
    }
    public string Mcc {
      get { return mcc_; }
    }
    
    public const int MncFieldNumber = 4;
    private bool hasMnc;
    private string mnc_ = "";
    public bool HasMnc {
      get { return hasMnc; }
    }
    public string Mnc {
      get { return mnc_; }
    }
    
    public const int SignalStrengthFieldNumber = 5;
    private bool hasSignalStrength;
    private int signalStrength_;
    public bool HasSignalStrength {
      get { return hasSignalStrength; }
    }
    public int SignalStrength {
      get { return signalStrength_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLac) return false;
        if (!hasCid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _baseStationFieldNames;
      if (hasLac) {
        output.WriteString(1, field_names[1], Lac);
      }
      if (hasCid) {
        output.WriteString(2, field_names[0], Cid);
      }
      if (hasMcc) {
        output.WriteString(3, field_names[2], Mcc);
      }
      if (hasMnc) {
        output.WriteString(4, field_names[3], Mnc);
      }
      if (hasSignalStrength) {
        output.WriteInt32(5, field_names[4], SignalStrength);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLac) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Lac);
        }
        if (hasCid) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Cid);
        }
        if (hasMcc) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Mcc);
        }
        if (hasMnc) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Mnc);
        }
        if (hasSignalStrength) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, SignalStrength);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BaseStation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BaseStation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BaseStation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BaseStation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BaseStation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BaseStation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BaseStation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BaseStation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BaseStation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BaseStation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BaseStation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BaseStation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BaseStation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BaseStation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BaseStation result;
      
      private BaseStation PrepareBuilder() {
        if (resultIsReadOnly) {
          BaseStation original = result;
          result = new BaseStation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BaseStation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protobuf.Components.BaseStation.Descriptor; }
      }
      
      public override BaseStation DefaultInstanceForType {
        get { return global::Protobuf.Components.BaseStation.DefaultInstance; }
      }
      
      public override BaseStation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BaseStation) {
          return MergeFrom((BaseStation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BaseStation other) {
        if (other == global::Protobuf.Components.BaseStation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLac) {
          Lac = other.Lac;
        }
        if (other.HasCid) {
          Cid = other.Cid;
        }
        if (other.HasMcc) {
          Mcc = other.Mcc;
        }
        if (other.HasMnc) {
          Mnc = other.Mnc;
        }
        if (other.HasSignalStrength) {
          SignalStrength = other.SignalStrength;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_baseStationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _baseStationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLac = input.ReadString(ref result.lac_);
              break;
            }
            case 18: {
              result.hasCid = input.ReadString(ref result.cid_);
              break;
            }
            case 26: {
              result.hasMcc = input.ReadString(ref result.mcc_);
              break;
            }
            case 34: {
              result.hasMnc = input.ReadString(ref result.mnc_);
              break;
            }
            case 40: {
              result.hasSignalStrength = input.ReadInt32(ref result.signalStrength_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLac {
        get { return result.hasLac; }
      }
      public string Lac {
        get { return result.Lac; }
        set { SetLac(value); }
      }
      public Builder SetLac(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLac = true;
        result.lac_ = value;
        return this;
      }
      public Builder ClearLac() {
        PrepareBuilder();
        result.hasLac = false;
        result.lac_ = "";
        return this;
      }
      
      public bool HasCid {
        get { return result.hasCid; }
      }
      public string Cid {
        get { return result.Cid; }
        set { SetCid(value); }
      }
      public Builder SetCid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCid = true;
        result.cid_ = value;
        return this;
      }
      public Builder ClearCid() {
        PrepareBuilder();
        result.hasCid = false;
        result.cid_ = "";
        return this;
      }
      
      public bool HasMcc {
        get { return result.hasMcc; }
      }
      public string Mcc {
        get { return result.Mcc; }
        set { SetMcc(value); }
      }
      public Builder SetMcc(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMcc = true;
        result.mcc_ = value;
        return this;
      }
      public Builder ClearMcc() {
        PrepareBuilder();
        result.hasMcc = false;
        result.mcc_ = "";
        return this;
      }
      
      public bool HasMnc {
        get { return result.hasMnc; }
      }
      public string Mnc {
        get { return result.Mnc; }
        set { SetMnc(value); }
      }
      public Builder SetMnc(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMnc = true;
        result.mnc_ = value;
        return this;
      }
      public Builder ClearMnc() {
        PrepareBuilder();
        result.hasMnc = false;
        result.mnc_ = "";
        return this;
      }
      
      public bool HasSignalStrength {
        get { return result.hasSignalStrength; }
      }
      public int SignalStrength {
        get { return result.SignalStrength; }
        set { SetSignalStrength(value); }
      }
      public Builder SetSignalStrength(int value) {
        PrepareBuilder();
        result.hasSignalStrength = true;
        result.signalStrength_ = value;
        return this;
      }
      public Builder ClearSignalStrength() {
        PrepareBuilder();
        result.hasSignalStrength = false;
        result.signalStrength_ = 0;
        return this;
      }
    }
    static BaseStation() {
      object.ReferenceEquals(global::Protobuf.Components.LocationMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
